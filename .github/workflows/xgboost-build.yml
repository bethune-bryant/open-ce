name: Open-CE XGBoost Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        architecture: [x86, ppc64le]

    steps:
      - uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2.0.9
        with:
          arch: ${{ matrix.architecture }}
          distro: ubuntu18.04
          run: |
            CONDA_HOME=${CONDA_HOME:-/opt/conda}
            PATH=$CONDA_HOME/bin:$PATH
            CUDA_HOME=/usr/local/cuda

            OPEN_CE_CONDA_BUILD=3.20.5

            CICD_GROUP=cicd
            GROUP_ID=1500
            BUILD_USER=builder
            BUILD_ID=1084

            # Remove preinclude system compilers
            # rpm -e --nodeps --verbose gcc gcc-c++
            export ARCH="$(uname -m)" && \
            apt install -y \
            sudo \
            bzip2 \
            rsync \
            git \
            patch &&\
            # Create CICD Group
            groupadd --non-unique --gid ${GROUP_ID} ${CICD_GROUP} && \
            # Adduser Builder
            useradd -b /home --non-unique --create-home --gid ${GROUP_ID} --groups wheel \
            --uid ${BUILD_ID} --comment "User for Building" ${BUILD_USER} && \
            echo "${BUILD_USER}    ALL=NOPASSWD: ALL" > /etc/sudoers.d/user-${BUILD_USER} && \
            curl -o /tmp/anaconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-${ARCH}.sh && \
            chmod +x /tmp/anaconda.sh && \
            /bin/bash /tmp/anaconda.sh -f -b -p /opt/conda && \
            rm -f /tmp/anaconda.sh && \
            $CONDA_HOME/bin/conda install -y conda-build=${OPEN_CE_CONDA_BUILD} && \
            chown -R ${BUILD_USER}:${CICD_GROUP} ${CONDA_HOME}
        if: matrix.architecture == 'ppc64le'
      - uses: conda-incubator/setup-miniconda@v2.0.0
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install -y conda-build
      - name: Build XGBoost
        shell: bash -l {0}
        # yamllint disable rule:line-length
        run: |
          ./open-ce/open-ce build env https://raw.githubusercontent.com/open-ce/open-ce-environments/main/envs/xgboost-env.yaml \
                            --python_versions ${{ matrix.python-version }} \
                            --build_types cpu
        # yamllint enable rule:line-length
